<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<bean id="memberDetailsService" class="com.kh.security.member.model.service.MemberDetailsService"/>

	<bean id="loginSuccessHandler" class="com.kh.security.handler.LoginSuccessHandler"/>
	
	<bean id="loginFailureHandler" class="com.kh.security.handler.LoginFailureHandler"/>
	<!--  
		<security:http>
			http 요청을 처리하는 방법을 설정하는 요소이다.
			
			webapp/resources 폴더 안에 있는 파일들은 
			security 대상이 아니라는 것을 나타낸다.
	-->
	<security:http pattern="/js/**" security="none" />
	<security:http pattern="/css/**" security="none" />
	<security:http pattern="/images/**" security="none" />

	<!--  
		auto-config 속성은 로그인, 로그아웃 등에 대한 기본 설정을 지정하는 속성이다.
		use-expressions 속성은 SpEL(스프링 표현식)의 사용 여부를 지정하는 속성이다.
	-->
	<security:http auto-config="true" use-expressions="true">
		<!--  
			<security:intercept-url>
				- pattern 속성에 해당하는 요청에 대한 접속 권한을 설정한다.
		-->
		<security:intercept-url pattern="/login" access="permitAll" />
		<security:intercept-url pattern="/admin/**" access="hasRole('ADMIN')" />
		<security:intercept-url pattern="/**"       access="isAuthenticated()" />
		
		<!--
			접근 제한에 대한 access-denied-handler 를 지정한다
			error-page 속성은 권한이 없는 계정에서 잘못된 접근시 이동할 URL를 지정한다.
		 -->
		<security:access-denied-handler error-page="/accessError"/>
		<!--  
		<security:intercept-url pattern="/**" access="isAuthenticated()"/>
		-->

		<!--  
			CSRF 속성을 사용하지 않게 설정한다.
			<security:csrf disabled="true"/>
		-->

<!-- 		<security:form-login -->
<!-- 			login-page="/login" -->
<!-- 			username-parameter="userId" -->
<!-- 			password-parameter="userPwd" -->
<!-- 			default-target-url="/" -->
<!-- 		/> -->
		<!-- 권한마다 로그인후 이동하는 화면을 다르게 해줄때 -->
		<security:form-login
			login-page="/login"
			username-parameter="userId"
			password-parameter="userPwd"
			authentication-success-handler-ref="loginSuccessHandler"
			authentication-failure-handler-ref="loginFailureHandler"
		/>
		<security:logout
			logout-url="/logout"
			logout-success-url="/"
		/>
		<!-- 기억하기 기능 활성화(2주) -->
		<security:remember-me
			key="khweb" token-validity-seconds="1209600"
		/>
		<!-- 로그인 세션 1개만 유지하기
		invalid-session-url 세션이 만료되었을때 이동할 url 
		-->
		<security:session-management invalid-session-url="/login">
			<security:concurrency-control max-sessions="1" expired-url="/"/>
		</security:session-management>
		
	</security:http>

	<!--  
		<security:authentication-manager>
		- 유저들에 대한 인증과 관련된 설정을 하는 요소이다.
		- 인 메모리, DB, LDAP 등 다양한 방법으로 유저 조회 및 인증 수행하도록
			설정할 수 있다.
		
		1. 인 메모리 방식 설정 (테스트 용도로 사용)
	-->
<!-- 	<security:authentication-manager> -->
<!-- 		<security:authentication-provider> -->
<!-- 			<security:password-encoder ref="bcryptPasswordEncoder" /> -->
<!-- 			<security:user-service> -->
<!-- 				<security:user name="yoc0421" -->
<!-- 					password="$2a$10$VTjoABHYPzgZrA./sbHRROPjjCdIoEK68VyMnLEjd1LOme1BlpMLW" -->
<!-- 					authorities="ROLE_USER" /> -->
<!-- 				<security:user name="admin" -->
<!-- 					password="$2a$10$VTjoABHYPzgZrA./sbHRROPjjCdIoEK68VyMnLEjd1LOme1BlpMLW" -->
<!-- 					authorities="ROLE_USER,ROLE_ADMIN" /> -->
<!-- 			</security:user-service> -->
<!-- 		</security:authentication-provider> -->
<!-- 	</security:authentication-manager> -->

        <!-- 
            2. WEB 계정의 MEMBER 테이브에서 유저 조회 및 인증을 구현하도록 설정 
        -->
        <security:authentication-manager>
            <security:authentication-provider user-service-ref="memberDetailsService">
                <security:password-encoder ref="bcryptPasswordEncoder"/>
            </security:authentication-provider>
        </security:authentication-manager>

</beans>